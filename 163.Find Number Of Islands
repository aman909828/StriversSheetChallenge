from collections import deque
def bfs(i, j, grid, n, m):
    grid[i][j] = 0
    queue = deque([(i, j)])

    while queue:
        row, col = queue.popleft()
        for x in range(-1, 2):  
            for y in range(-1, 2):  
                nRow, nCol = row + x, col + y

				# Check if coordinates is out of bound
                if nRow < 0 or nRow >= n or nCol < 0 or nCol >= m or grid[nRow][nCol] == 0:
                    continue
				
				# Mark as visited and append to queue
                grid[nRow][nCol] = 0
                queue.append((nRow, nCol))
def findIslands(mat, n, m):
	cnt = 0
	for i in range(n):
		for j in range(m):
			if mat[i][j]==1:
				# dfs(i,j,mat,n,m)
				bfs(i,j,mat,n,m)
				cnt+=1
	return cnt
